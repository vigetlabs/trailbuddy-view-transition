---
interface Props {
  options: {
    label: 'hike' | 'run' | 'bike'
    checked?: boolean
  }[]
}

const { options } = Astro.props

import hikeSvg from '@assets/svgs/hike.svg?raw'
import runSvg from '@assets/svgs/run.svg?raw'
import bikeSvg from '@assets/svgs/bike.svg?raw'
---

<fieldset class="flex items-center gap-4 <sm:hidden">
  <legend class="sr-only">Trail Type</legend>

  {
    options.map(({ label, checked = false }) => {
      function Svg(label: string) {
        switch (label) {
          case 'hike':
            return <Fragment set:html={hikeSvg} />
          case 'run':
            return <Fragment set:html={runSvg} />
          case 'bike':
            return <Fragment set:html={bikeSvg} />
        }
      }

      return (
        <div>
          <input
            class="absolute opacity-0 [&:checked~label]:border-0 [&:checked~label]:bg-red-orange [&:checked~label]:text-white [&:focus-visible~label]:ring-2 [&:focus-visible~label]:ring-red-orange [&:focus-visible~label]:ring-offset-2 [&:focus-visible~label]:ring-offset-champagne"
            type="radio"
            name="trail-type"
            value={label}
            id={`trail-type-${label}`}
            checked={checked}
          />

          <label
            for={`trail-type-${label}`}
            class="flex h-8 w-12 cursor-pointer items-center justify-center rounded-lg border-2 bg-white p-1.5 text-shark md:h-10 md:w-[70px] md:rounded-2xl [&_svg]:h-full"
          >
            {Svg(label)}
            <span class="sr-only">{label}</span>
          </label>
        </div>
      )
    })
  }
</fieldset>
